<?php

/**
 * @file
 * Module containing custom oda code.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;
use Drupal\views\ViewExecutable;
use Drupal\Core\Link;

/**
 * Implements hook_views_pre_render().
 */
function oda_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'oda_data') {
    $view->element['#attached']['library'][] = 'oda/data_report_layout';
  }
}

/**
 * Implements hook_form_alter().
 */
function oda_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == "views_exposed_form" && $form['#id'] == "views-exposed-form-media-media-page-list") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $options = [];
      foreach ($form['type']['#options'] as $key => $value) {
        if ($key == 'oda_files' || $key == 'oda_images') {
          $options[$key] = $value;
        }
      }
      $form['type']['#options'] = $options;
    }
  }
  // Add custom library to admin content page and set domain.
  if ($form_id == "views_form_content_page_1") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['#attached']['library'][] = 'oda/admin_content';
      // Get query string.
      $query = \Drupal::request()->query->all();
      $domain_set = FALSE;
      foreach ($query as $key => $value) {
        if ($key == 'field_domain_access_target_id') {
          $domain_set = TRUE;
        }
      }
      if (!$domain_set) {
        // Redirect to query string "field_domain_access_target_id=oit_colorado_edu".
        $query['field_domain_access_target_id'] = 'oda_colorado_edu';
        $query = http_build_query($query);
        $response = new RedirectResponse('/admin/content?' . $query);
        $response->send();
      }
    }
  }

  if ($form_id == "search_block_form") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['keys']['#attributes']['placeholder'] = t('Search Site');
    }
  }

  if ($form_id == "node_webform_form" || $form_id == "node_webform_edit_form") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['field_oit_category']['#access'] = FALSE;
    }
  }

  // Set defaults on data report nodes.
  if ($form_id == "node_oda_page_form") {
    $form['body']['widget'][0]['#default_value'] = '<p>ODA Data Report Info</p><p><strong>Tags:</strong> tag, tag, tag</p>';
  }

  // Set defaults on data report nodes for ODA type.
  if ($form_id == "node_data_report_form" || $form_id == "node_data_report_edit_form") {
    $form['#attached']['library'][] = 'webform/webform.element.select2';
    $form['#attached']['library'][] = 'oda/oit_data_report_page_form';
    // Group for page sub-type extra fields.
    $form['oda_terms'] = [
      '#title' => t('Terms'),
      '#type' => 'details',
      '#group' => 'advanced',
      '#open' => 1,
      '#weight' => 100,
    ];
    $form['field_oda_population']['#group'] = 'oda_terms';
    $form['field_oda_level_of_detail']['#group'] = 'oda_terms';
    $form['field_oda_cu_stats']['#group'] = 'oda_terms';
    $form['field_oda_course_data']['#group'] = 'oda_terms';
    $form['field_oda_term']['#group'] = 'oda_terms';
    $form['field_oda_type']['#group'] = 'oda_terms';
    $form['field_oda_academic_terms_covered']['#group'] = 'oda_terms';
    $form['field_oda_demographics']['#group'] = 'oda_terms';
    $form['field_oda_peers_ext_org']['#group'] = 'oda_terms';
    $form['field_oda_financial']['#group'] = 'oda_terms';
    $form['field_oda_survey_data']['#group'] = 'oda_terms';


    // if current user is 'oda_super_editors' or 'administrator'.
    $current_user = \Drupal::currentUser();
    $roles = $current_user->getRoles();
    if (in_array('oda_super_editors', $roles) || in_array('administrator', $roles)) {
      // Add 'Add/Delete Terms' button to taxonomy fields.
      $term_list = [
        'oda_population',
        'oda_level_of_detail',
        'oda_cu_stats',
        'oda_course_data',
        'oda_term',
        'oda_type',
        'oda_academic_terms_covered',
        'oda_demographics',
        'oda_peers_ext_org',
      ];
      foreach ($term_list as $term) {
        $link = oda_term_edit($term);
        $form_term = 'field_' . $term;
        $form[$form_term]['widget']['#suffix'] = $link;
      }
    }
  }
}

/**
 * Create term edit links.
 */
function oda_term_edit($term_id, $edit_label = 'Add/Delete Terms') {
  $url = Url::fromUri("internal:/admin/structure/taxonomy/manage/$term_id/overview");
  $link = Link::fromTextAndUrl(t($edit_label), $url);

  return $link->toString()->getGeneratedLink();
}

/**
 * Implements hook_shortcut_default_set().
 */
function oda_shortcut_default_set() {
  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();

  // if roles array contains 'oda_editors' or 'oda_super_editors'.
  if (in_array('oda_editors', $roles)) {
      return 'oda';
  }
  if (in_array('oda_super_editors', $roles)) {
      return 'oda-super-editor';
  }
}

