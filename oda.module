<?php

/**
 * @file
 * Module containing custom oda code.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_alter().
 */
function oda_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add custom library to admin content page and set domain.
  if ($form_id == "views_form_content_page_1") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['#attached']['library'][] = 'oda/admin_content';
      // Get query string.
      $query = \Drupal::request()->query->all();
      $domain_set = FALSE;
      foreach ($query as $key => $value) {
        if ($key == 'field_domain_access_target_id') {
          $domain_set = TRUE;
        }
      }
      if (!$domain_set) {
        // Redirect to query string "field_domain_access_target_id=oit_colorado_edu".
        $query['field_domain_access_target_id'] = 'oda_colorado_edu';
        $query = http_build_query($query);
        $response = new RedirectResponse('/admin/content?' . $query);
        $response->send();
      }
    }
  }

  // Set defaults on page nodes for ODA type.
  if ($form_id == "node_page_form" || $form_id == "node_page_edit_form") {
    $request = \Drupal::request();
    $request_type = $request->get("type");
    if (isset($request_type)) {
      if ($request_type == "oda") {
        $menu = [];
        foreach ($form['menu']['link']['menu_parent']['#options'] as $key => $value) {
          // If key starts with "oda-main-menu".
          if (strpos($key, 'oda-main-menu') !== FALSE) {
            $menu[$key] = $value;
          }
        }
        $form['menu']['link']['menu_parent']['#options'] = $menu;
      }
    }
  }


  // Still need to add hook for page node and oda page type.
//  foreach ($form['menu']['link']['menu_parent']['#options'] as $key => $value) {
//    if ($value == '<ODA Main Menu>') {
//      break;
//    } else {
//      unset($form['menu']['link']['menu_parent']['#options'][$key]);
//    }
//  }
}
