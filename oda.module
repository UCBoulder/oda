<?php

/**
 * @file
 * Module containing custom oda code.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_alter().
 */
function oda_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == "views_exposed_form" && $form['#id'] == "views-exposed-form-media-media-page-list") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $options = [];
      foreach ($form['type']['#options'] as $key => $value) {
        if ($key == 'oda_files' || $key == 'oda_images') {
          $options[$key] = $value;
        }
      }
      $form['type']['#options'] = $options;
    }
  }
  // Add custom library to admin content page and set domain.
  if ($form_id == "views_form_content_page_1") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['#attached']['library'][] = 'oda/admin_content';
      // Get query string.
      $query = \Drupal::request()->query->all();
      $domain_set = FALSE;
      foreach ($query as $key => $value) {
        if ($key == 'field_domain_access_target_id') {
          $domain_set = TRUE;
        }
      }
      if (!$domain_set) {
        // Redirect to query string "field_domain_access_target_id=oit_colorado_edu".
        $query['field_domain_access_target_id'] = 'oda_colorado_edu';
        $query = http_build_query($query);
        $response = new RedirectResponse('/admin/content?' . $query);
        $response->send();
      }
    }
  }

  if ($form_id == "search_block_form") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['keys']['#attributes']['placeholder'] = t('Search Site');
    }
  }

  if ($form_id == "node_webform_form" || $form_id == "node_webform_edit_form") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda') {
      $form['field_oit_category']['#access'] = FALSE;
    }
  }

  // Set defaults on page nodes for ODA type.
  if ($form_id == "node_data_report_form" || $form_id == "node_data_report_edit_form") {
    $form['#attached']['library'][] = 'webform/webform.element.select2';
    $form['#attached']['library'][] = 'oda/oit_data_report_page_form';
    // Group for page sub-type extra fields.
    $form['oda_terms'] = [
      '#title' => t('Terms'),
      '#type' => 'details',
      '#group' => 'advanced',
      '#open' => 1,
      '#weight' => 100,
    ];
    $form['field_oda_population']['#group'] = 'oda_terms';
    $form['field_level_of_detail']['#group'] = 'oda_terms';
    $form['field_oda_cu_stats']['#group'] = 'oda_terms';
    $form['field_oda_course_data']['#group'] = 'oda_terms';
    $form['field_oda_term']['#group'] = 'oda_terms';
    $form['field_oda_type']['#group'] = 'oda_terms';
    $form['field_oda_academic_terms_covered']['#group'] = 'oda_terms';
    $form['field_demographics']['#group'] = 'oda_terms';
    $form['field_oda_peers_ext_org']['#group'] = 'oda_terms';
    $form['field_oda_financial']['#group'] = 'oda_terms';
    $form['field_oda_survey_data']['#group'] = 'oda_terms';
  }

  // Set defaults on page nodes for ODA type.
  if ($form_id == "node_page_form" || $form_id == "node_page_edit_form") {
    $domain = \Drupal::service('oit.domain')->getDomain();
    if ($domain == 'oda' && $form_id == "node_page_form") {
      // Get query string.
      $query = \Drupal::request()->query->all();
      $oda_set = FALSE;
      foreach ($query as $key => $value) {
        if ($value == 'oda') {
          $oda_set = TRUE;
        }
      }
      if (!$oda_set) {
        // Redirect to query string "field_domain_access_target_id=oit_colorado_edu".
        $query['type'] = 'oda';
        $query = http_build_query($query);
        $response = new RedirectResponse('/node/add/page?' . $query);
        $response->send();
      }
      $form['field_oit_category']['widget']['#default_value'][] = 1081;
    }
    $request = \Drupal::request();
    $request_type = $request->get("type");
    $request_type = isset($request_type) ? $request_type : 0;
    // Only show ODA menu items.
    if ($request_type == "oda" || in_array(1081, $form['field_oit_category']['widget']['#default_value'])) {
      $menu = [];
      foreach ($form['menu']['link']['menu_parent']['#options'] as $key => $value) {
        // If key starts with "oda-main-menu".
        if (strpos($key, 'oda-main-menu') !== FALSE) {
          $menu[$key] = $value;
        }
      }
      $form['menu']['link']['menu_parent']['#options'] = $menu;

      if ($domain == 'oda') {
        $form['#attached']['library'][] = 'oda/node_page';

        $form['field_service_main_page']['#access'] = FALSE;
        $form['taxonomy_vocabulary_11']['#access'] = FALSE;
        $form['field_services_related']['#access'] = FALSE;
        $form['field_tut_comp_type_d7']['#access'] = FALSE;
        $form['field_software_download_link']['#access'] = FALSE;
        $form['type_service']['#access'] = FALSE;
        $form['field_oit_category']['#access'] = FALSE;
        $form['field_show_child_links']['#access'] = FALSE;
      }
    }

    if (!in_array(1081, $form['field_oit_category']['widget']['#default_value']) && $domain == 'oda' && $form_id == "node_page_edit_form") {
      \Drupal::messenger()->addMessage(t('You are not allowed to edit this page, try creating a new one.'), 'error');
      $query['type'] = 'oda';
      $query = http_build_query($query);
      $response = new RedirectResponse('/node/add/page?' . $query);
      $response->send();
    }
  }
}

/**
 * Implements hook_shortcut_default_set().
 */
function oda_shortcut_default_set() {
  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();

  // if roles array contains 'oda_editors' or 'oda_super_editors'.
  if (in_array('oda_editors', $roles)) {
      return 'oda';
  }
  if (in_array('oda_super_editors', $roles)) {
      return 'oda-super-editor';
  }
}

